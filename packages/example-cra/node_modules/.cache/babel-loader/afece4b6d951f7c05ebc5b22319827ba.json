{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPriorityConnector = exports.getSelectedConnector = exports.initializeConnector = void 0;\n\nconst store_1 = require(\"@web3-react/store\");\n\nconst react_1 = require(\"react\");\n\nconst zustand_1 = __importDefault(require(\"zustand\"));\n\nlet DynamicProvider;\n\nfunction importProvider() {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (DynamicProvider === undefined) {\n      try {\n        const {\n          Web3Provider\n        } = yield Promise.resolve().then(() => __importStar(require('@ethersproject/providers')));\n        DynamicProvider = Web3Provider;\n      } catch (_a) {\n        console.debug('@ethersproject/providers not available');\n        DynamicProvider = null;\n      }\n    }\n  });\n}\n/**\n * Wraps the initialization of a `connector`. Creates a zustand `store` with `actions` bound to it, and then passes\n * these to the connector as specified in `f`. Also creates a variety of `hooks` bound to this `store`.\n *\n * @typeParam T - The type of the `connector` returned from `f`.\n * @param f - A function which is called with `actions` bound to the returned `store`.\n * @returns [connector, hooks, store] - The initialized connector, a variety of hooks, and a zustand store.\n */\n\n\nfunction initializeConnector(f) {\n  const [store, actions] = (0, store_1.createWeb3ReactStoreAndActions)();\n  const connector = f(actions);\n  const useConnector = (0, zustand_1.default)(store);\n  const stateHooks = getStateHooks(useConnector);\n  const derivedHooks = getDerivedHooks(stateHooks);\n  const augmentedHooks = getAugmentedHooks(connector, stateHooks, derivedHooks);\n  return [connector, Object.assign(Object.assign(Object.assign({}, stateHooks), derivedHooks), augmentedHooks), store];\n}\n\nexports.initializeConnector = initializeConnector;\n\nfunction computeIsActive(_ref) {\n  let {\n    chainId,\n    accounts,\n    activating\n  } = _ref;\n  return Boolean(chainId && accounts && !activating);\n}\n/**\n * Creates a variety of convenience `hooks` that return data associated with a particular passed connector.\n *\n * @param initializedConnectors - Two or more [connector, hooks(, store)] arrays, as returned from initializeConnector.\n * @returns hooks - A variety of convenience hooks that wrap the hooks returned from initializeConnector.\n */\n\n\nfunction getSelectedConnector() {\n  for (var _len = arguments.length, initializedConnectors = new Array(_len), _key = 0; _key < _len; _key++) {\n    initializedConnectors[_key] = arguments[_key];\n  }\n\n  function getIndex(connector) {\n    const index = initializedConnectors.findIndex(_ref2 => {\n      let [initializedConnector] = _ref2;\n      return connector === initializedConnector;\n    });\n    if (index === -1) throw new Error('Connector not found');\n    return index;\n  }\n\n  function useSelectedStore(connector) {\n    const store = initializedConnectors[getIndex(connector)][2];\n    if (!store) throw new Error('Stores not passed');\n    return store;\n  } // the following code calls hooks in a map a lot, which violates the eslint rule.\n  // this is ok, though, because initializedConnectors never changes, so the same hooks are called each time\n\n\n  function useSelectedChainId(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(_ref3 => {\n      let [, {\n        useChainId\n      }] = _ref3;\n      return useChainId();\n    });\n    return values[getIndex(connector)];\n  }\n\n  function useSelectedAccounts(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(_ref4 => {\n      let [, {\n        useAccounts\n      }] = _ref4;\n      return useAccounts();\n    });\n    return values[getIndex(connector)];\n  }\n\n  function useSelectedIsActivating(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(_ref5 => {\n      let [, {\n        useIsActivating\n      }] = _ref5;\n      return useIsActivating();\n    });\n    return values[getIndex(connector)];\n  }\n\n  function useSelectedAccount(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(_ref6 => {\n      let [, {\n        useAccount\n      }] = _ref6;\n      return useAccount();\n    });\n    return values[getIndex(connector)];\n  }\n\n  function useSelectedIsActive(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(_ref7 => {\n      let [, {\n        useIsActive\n      }] = _ref7;\n      return useIsActive();\n    });\n    return values[getIndex(connector)];\n  }\n  /**\n   * @typeParam T - A type argument must only be provided if one or more of the connectors passed to\n   * getSelectedConnector is using `connector.customProvider`, in which case it must match every possible type of this\n   * property, over all connectors.\n   */\n\n\n  function useSelectedProvider(connector, network) {\n    const index = getIndex(connector); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    const values = initializedConnectors.map((_ref8, i) => {\n      let [, {\n        useProvider\n      }] = _ref8;\n      return useProvider(network, i === index);\n    });\n    return values[index];\n  }\n\n  function useSelectedENSNames(connector, provider) {\n    const index = getIndex(connector);\n    const values = initializedConnectors.map((_ref9, i) => {\n      let [, {\n        useENSNames\n      }] = _ref9;\n      return (// eslint-disable-next-line react-hooks/rules-of-hooks\n        useENSNames(i === index ? provider : undefined)\n      );\n    });\n    return values[index];\n  }\n\n  function useSelectedENSName(connector, provider) {\n    const index = getIndex(connector); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    const values = initializedConnectors.map((_ref10, i) => {\n      let [, {\n        useENSName\n      }] = _ref10;\n      return useENSName(i === index ? provider : undefined);\n    });\n    return values[index];\n  }\n\n  return {\n    useSelectedStore,\n    useSelectedChainId,\n    useSelectedAccounts,\n    useSelectedIsActivating,\n    useSelectedAccount,\n    useSelectedIsActive,\n    useSelectedProvider,\n    useSelectedENSNames,\n    useSelectedENSName\n  };\n}\n\nexports.getSelectedConnector = getSelectedConnector;\n/**\n * Creates a variety of convenience `hooks` that return data associated with the first of the `initializedConnectors`\n * that is active.\n *\n * @param initializedConnectors - Two or more [connector, hooks(, store)] arrays, as returned from initializeConnector.\n * @returns hooks - A variety of convenience hooks that wrap the hooks returned from initializeConnector.\n */\n\nfunction getPriorityConnector() {\n  for (var _len2 = arguments.length, initializedConnectors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    initializedConnectors[_key2] = arguments[_key2];\n  }\n\n  const {\n    useSelectedStore,\n    useSelectedChainId,\n    useSelectedAccounts,\n    useSelectedIsActivating,\n    useSelectedAccount,\n    useSelectedIsActive,\n    useSelectedProvider,\n    useSelectedENSNames,\n    useSelectedENSName\n  } = getSelectedConnector(...initializedConnectors);\n\n  function usePriorityConnector() {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(_ref11 => {\n      let [, {\n        useIsActive\n      }] = _ref11;\n      return useIsActive();\n    });\n    const index = values.findIndex(isActive => isActive);\n    return initializedConnectors[index === -1 ? 0 : index][0];\n  }\n\n  function usePriorityStore() {\n    return useSelectedStore(usePriorityConnector());\n  }\n\n  function usePriorityChainId() {\n    return useSelectedChainId(usePriorityConnector());\n  }\n\n  function usePriorityAccounts() {\n    return useSelectedAccounts(usePriorityConnector());\n  }\n\n  function usePriorityIsActivating() {\n    return useSelectedIsActivating(usePriorityConnector());\n  }\n\n  function usePriorityAccount() {\n    return useSelectedAccount(usePriorityConnector());\n  }\n\n  function usePriorityIsActive() {\n    return useSelectedIsActive(usePriorityConnector());\n  }\n  /**\n   * @typeParam T - A type argument must only be provided if one or more of the connectors passed to\n   * getPriorityConnector is using `connector.customProvider`, in which case it must match every possible type of this\n   * property, over all connectors.\n   */\n\n\n  function usePriorityProvider(network) {\n    return useSelectedProvider(usePriorityConnector(), network);\n  }\n\n  function usePriorityENSNames(provider) {\n    return useSelectedENSNames(usePriorityConnector(), provider);\n  }\n\n  function usePriorityENSName(provider) {\n    return useSelectedENSName(usePriorityConnector(), provider);\n  }\n\n  return {\n    useSelectedStore,\n    useSelectedChainId,\n    useSelectedAccounts,\n    useSelectedIsActivating,\n    useSelectedAccount,\n    useSelectedIsActive,\n    useSelectedProvider,\n    useSelectedENSNames,\n    useSelectedENSName,\n    usePriorityConnector,\n    usePriorityStore,\n    usePriorityChainId,\n    usePriorityAccounts,\n    usePriorityIsActivating,\n    usePriorityAccount,\n    usePriorityIsActive,\n    usePriorityProvider,\n    usePriorityENSNames,\n    usePriorityENSName\n  };\n}\n\nexports.getPriorityConnector = getPriorityConnector;\n\nconst CHAIN_ID = _ref12 => {\n  let {\n    chainId\n  } = _ref12;\n  return chainId;\n};\n\nconst ACCOUNTS = _ref13 => {\n  let {\n    accounts\n  } = _ref13;\n  return accounts;\n};\n\nconst ACCOUNTS_EQUALITY_CHECKER = (oldAccounts, newAccounts) => oldAccounts === undefined && newAccounts === undefined || oldAccounts !== undefined && oldAccounts.length === (newAccounts === null || newAccounts === void 0 ? void 0 : newAccounts.length) && oldAccounts.every((oldAccount, i) => oldAccount === newAccounts[i]);\n\nconst ACTIVATING = _ref14 => {\n  let {\n    activating\n  } = _ref14;\n  return activating;\n};\n\nfunction getStateHooks(useConnector) {\n  function useChainId() {\n    return useConnector(CHAIN_ID);\n  }\n\n  function useAccounts() {\n    return useConnector(ACCOUNTS, ACCOUNTS_EQUALITY_CHECKER);\n  }\n\n  function useIsActivating() {\n    return useConnector(ACTIVATING);\n  }\n\n  return {\n    useChainId,\n    useAccounts,\n    useIsActivating\n  };\n}\n\nfunction getDerivedHooks(_ref15) {\n  let {\n    useChainId,\n    useAccounts,\n    useIsActivating\n  } = _ref15;\n\n  function useAccount() {\n    var _a;\n\n    return (_a = useAccounts()) === null || _a === void 0 ? void 0 : _a[0];\n  }\n\n  function useIsActive() {\n    const chainId = useChainId();\n    const accounts = useAccounts();\n    const activating = useIsActivating();\n    return computeIsActive({\n      chainId,\n      accounts,\n      activating\n    });\n  }\n\n  return {\n    useAccount,\n    useIsActive\n  };\n}\n/**\n * @returns ENSNames - An array of length `accounts.length` which contains entries which are either all `undefined`,\n * indicated that names cannot be fetched because there's no provider, or they're in the process of being fetched,\n * or `string | null`, depending on whether an ENS name has been set for the account in question or not.\n */\n\n\nfunction useENS(provider) {\n  let accounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const [ENSNames, setENSNames] = (0, react_1.useState)();\n  (0, react_1.useEffect)(() => {\n    if (provider && accounts.length) {\n      let stale = false;\n      Promise.all(accounts.map(account => provider.lookupAddress(account))).then(ENSNames => {\n        if (stale) return;\n        setENSNames(ENSNames);\n      }).catch(error => {\n        if (stale) return;\n        console.debug('Could not fetch ENS names', error);\n        setENSNames(new Array(accounts.length).fill(null));\n      });\n      return () => {\n        stale = true;\n        setENSNames(undefined);\n      };\n    }\n  }, [provider, accounts]);\n  return ENSNames !== null && ENSNames !== void 0 ? ENSNames : new Array(accounts.length).fill(undefined);\n}\n\nfunction getAugmentedHooks(connector, _ref16, _ref17) {\n  let {\n    useAccounts,\n    useChainId\n  } = _ref16;\n  let {\n    useAccount,\n    useIsActive\n  } = _ref17;\n\n  /**\n   * Avoid type erasure by returning the most qualified type if not otherwise set.\n   * Note that this function's return type is `T | undefined`, but there is a code path\n   * that returns a Web3Provider, which could conflict with a user-provided T. So,\n   * it's important that users only provide an override for T if they know that\n   * `connector.customProvider` is going to be defined and of type T.\n   *\n   * @typeParam T - A type argument must only be provided if using `connector.customProvider`, in which case it\n   * must match the type of this property.\n   */\n  function useProvider(network) {\n    let enabled = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const isActive = useIsActive();\n    const chainId = useChainId(); // ensure that Provider is going to be available when loaded if @ethersproject/providers is installed\n\n    const [loaded, setLoaded] = (0, react_1.useState)(DynamicProvider !== undefined);\n    (0, react_1.useEffect)(() => {\n      if (loaded) return;\n      let stale = false;\n      void importProvider().then(() => {\n        if (stale) return;\n        setLoaded(true);\n      });\n      return () => {\n        stale = true;\n      };\n    }, [loaded]);\n    return (0, react_1.useMemo)(() => {\n      // to ensure connectors remain fresh, we condition re-renders on loaded, isActive and chainId\n      void loaded && isActive && chainId;\n\n      if (enabled) {\n        if (connector.customProvider) return connector.customProvider; // see tsdoc note above for return type explanation.\n        else if (DynamicProvider && connector.provider) return new DynamicProvider(connector.provider, network);\n      }\n    }, [loaded, enabled, isActive, chainId, network]);\n  }\n\n  function useENSNames(provider) {\n    const accounts = useAccounts();\n    return useENS(provider, accounts);\n  }\n\n  function useENSName(provider) {\n    var _a;\n\n    const account = useAccount();\n    const accounts = (0, react_1.useMemo)(() => account === undefined ? undefined : [account], [account]);\n    return (_a = useENS(provider, accounts)) === null || _a === void 0 ? void 0 : _a[0];\n  }\n\n  return {\n    useProvider,\n    useENSNames,\n    useENSName\n  };\n}","map":{"version":3,"sources":["/Users/charvai/Personal/PROJECT/RAPID_INNOVATION/web3-react/packages/core/dist/hooks.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","__importDefault","exports","getPriorityConnector","getSelectedConnector","initializeConnector","store_1","require","react_1","zustand_1","DynamicProvider","importProvider","Web3Provider","_a","console","debug","f","store","actions","createWeb3ReactStoreAndActions","connector","useConnector","default","stateHooks","getStateHooks","derivedHooks","getDerivedHooks","augmentedHooks","getAugmentedHooks","assign","computeIsActive","chainId","accounts","activating","Boolean","initializedConnectors","getIndex","index","findIndex","initializedConnector","Error","useSelectedStore","useSelectedChainId","values","map","useChainId","useSelectedAccounts","useAccounts","useSelectedIsActivating","useIsActivating","useSelectedAccount","useAccount","useSelectedIsActive","useIsActive","useSelectedProvider","network","i","useProvider","useSelectedENSNames","provider","useENSNames","useSelectedENSName","useENSName","usePriorityConnector","isActive","usePriorityStore","usePriorityChainId","usePriorityAccounts","usePriorityIsActivating","usePriorityAccount","usePriorityIsActive","usePriorityProvider","usePriorityENSNames","usePriorityENSName","CHAIN_ID","ACCOUNTS","ACCOUNTS_EQUALITY_CHECKER","oldAccounts","newAccounts","length","every","oldAccount","ACTIVATING","useENS","ENSNames","setENSNames","useState","useEffect","stale","all","account","lookupAddress","catch","error","Array","fill","enabled","loaded","setLoaded","useMemo","customProvider"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPriorityConnector = exports.getSelectedConnector = exports.initializeConnector = void 0;\nconst store_1 = require(\"@web3-react/store\");\nconst react_1 = require(\"react\");\nconst zustand_1 = __importDefault(require(\"zustand\"));\nlet DynamicProvider;\nfunction importProvider() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (DynamicProvider === undefined) {\n            try {\n                const { Web3Provider } = yield Promise.resolve().then(() => __importStar(require('@ethersproject/providers')));\n                DynamicProvider = Web3Provider;\n            }\n            catch (_a) {\n                console.debug('@ethersproject/providers not available');\n                DynamicProvider = null;\n            }\n        }\n    });\n}\n/**\n * Wraps the initialization of a `connector`. Creates a zustand `store` with `actions` bound to it, and then passes\n * these to the connector as specified in `f`. Also creates a variety of `hooks` bound to this `store`.\n *\n * @typeParam T - The type of the `connector` returned from `f`.\n * @param f - A function which is called with `actions` bound to the returned `store`.\n * @returns [connector, hooks, store] - The initialized connector, a variety of hooks, and a zustand store.\n */\nfunction initializeConnector(f) {\n    const [store, actions] = (0, store_1.createWeb3ReactStoreAndActions)();\n    const connector = f(actions);\n    const useConnector = (0, zustand_1.default)(store);\n    const stateHooks = getStateHooks(useConnector);\n    const derivedHooks = getDerivedHooks(stateHooks);\n    const augmentedHooks = getAugmentedHooks(connector, stateHooks, derivedHooks);\n    return [connector, Object.assign(Object.assign(Object.assign({}, stateHooks), derivedHooks), augmentedHooks), store];\n}\nexports.initializeConnector = initializeConnector;\nfunction computeIsActive({ chainId, accounts, activating }) {\n    return Boolean(chainId && accounts && !activating);\n}\n/**\n * Creates a variety of convenience `hooks` that return data associated with a particular passed connector.\n *\n * @param initializedConnectors - Two or more [connector, hooks(, store)] arrays, as returned from initializeConnector.\n * @returns hooks - A variety of convenience hooks that wrap the hooks returned from initializeConnector.\n */\nfunction getSelectedConnector(...initializedConnectors) {\n    function getIndex(connector) {\n        const index = initializedConnectors.findIndex(([initializedConnector]) => connector === initializedConnector);\n        if (index === -1)\n            throw new Error('Connector not found');\n        return index;\n    }\n    function useSelectedStore(connector) {\n        const store = initializedConnectors[getIndex(connector)][2];\n        if (!store)\n            throw new Error('Stores not passed');\n        return store;\n    }\n    // the following code calls hooks in a map a lot, which violates the eslint rule.\n    // this is ok, though, because initializedConnectors never changes, so the same hooks are called each time\n    function useSelectedChainId(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useChainId }]) => useChainId());\n        return values[getIndex(connector)];\n    }\n    function useSelectedAccounts(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useAccounts }]) => useAccounts());\n        return values[getIndex(connector)];\n    }\n    function useSelectedIsActivating(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useIsActivating }]) => useIsActivating());\n        return values[getIndex(connector)];\n    }\n    function useSelectedAccount(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useAccount }]) => useAccount());\n        return values[getIndex(connector)];\n    }\n    function useSelectedIsActive(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useIsActive }]) => useIsActive());\n        return values[getIndex(connector)];\n    }\n    /**\n     * @typeParam T - A type argument must only be provided if one or more of the connectors passed to\n     * getSelectedConnector is using `connector.customProvider`, in which case it must match every possible type of this\n     * property, over all connectors.\n     */\n    function useSelectedProvider(connector, network) {\n        const index = getIndex(connector);\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useProvider }], i) => useProvider(network, i === index));\n        return values[index];\n    }\n    function useSelectedENSNames(connector, provider) {\n        const index = getIndex(connector);\n        const values = initializedConnectors.map(([, { useENSNames }], i) => \n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useENSNames(i === index ? provider : undefined));\n        return values[index];\n    }\n    function useSelectedENSName(connector, provider) {\n        const index = getIndex(connector);\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useENSName }], i) => useENSName(i === index ? provider : undefined));\n        return values[index];\n    }\n    return {\n        useSelectedStore,\n        useSelectedChainId,\n        useSelectedAccounts,\n        useSelectedIsActivating,\n        useSelectedAccount,\n        useSelectedIsActive,\n        useSelectedProvider,\n        useSelectedENSNames,\n        useSelectedENSName,\n    };\n}\nexports.getSelectedConnector = getSelectedConnector;\n/**\n * Creates a variety of convenience `hooks` that return data associated with the first of the `initializedConnectors`\n * that is active.\n *\n * @param initializedConnectors - Two or more [connector, hooks(, store)] arrays, as returned from initializeConnector.\n * @returns hooks - A variety of convenience hooks that wrap the hooks returned from initializeConnector.\n */\nfunction getPriorityConnector(...initializedConnectors) {\n    const { useSelectedStore, useSelectedChainId, useSelectedAccounts, useSelectedIsActivating, useSelectedAccount, useSelectedIsActive, useSelectedProvider, useSelectedENSNames, useSelectedENSName, } = getSelectedConnector(...initializedConnectors);\n    function usePriorityConnector() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useIsActive }]) => useIsActive());\n        const index = values.findIndex((isActive) => isActive);\n        return initializedConnectors[index === -1 ? 0 : index][0];\n    }\n    function usePriorityStore() {\n        return useSelectedStore(usePriorityConnector());\n    }\n    function usePriorityChainId() {\n        return useSelectedChainId(usePriorityConnector());\n    }\n    function usePriorityAccounts() {\n        return useSelectedAccounts(usePriorityConnector());\n    }\n    function usePriorityIsActivating() {\n        return useSelectedIsActivating(usePriorityConnector());\n    }\n    function usePriorityAccount() {\n        return useSelectedAccount(usePriorityConnector());\n    }\n    function usePriorityIsActive() {\n        return useSelectedIsActive(usePriorityConnector());\n    }\n    /**\n     * @typeParam T - A type argument must only be provided if one or more of the connectors passed to\n     * getPriorityConnector is using `connector.customProvider`, in which case it must match every possible type of this\n     * property, over all connectors.\n     */\n    function usePriorityProvider(network) {\n        return useSelectedProvider(usePriorityConnector(), network);\n    }\n    function usePriorityENSNames(provider) {\n        return useSelectedENSNames(usePriorityConnector(), provider);\n    }\n    function usePriorityENSName(provider) {\n        return useSelectedENSName(usePriorityConnector(), provider);\n    }\n    return {\n        useSelectedStore,\n        useSelectedChainId,\n        useSelectedAccounts,\n        useSelectedIsActivating,\n        useSelectedAccount,\n        useSelectedIsActive,\n        useSelectedProvider,\n        useSelectedENSNames,\n        useSelectedENSName,\n        usePriorityConnector,\n        usePriorityStore,\n        usePriorityChainId,\n        usePriorityAccounts,\n        usePriorityIsActivating,\n        usePriorityAccount,\n        usePriorityIsActive,\n        usePriorityProvider,\n        usePriorityENSNames,\n        usePriorityENSName,\n    };\n}\nexports.getPriorityConnector = getPriorityConnector;\nconst CHAIN_ID = ({ chainId }) => chainId;\nconst ACCOUNTS = ({ accounts }) => accounts;\nconst ACCOUNTS_EQUALITY_CHECKER = (oldAccounts, newAccounts) => (oldAccounts === undefined && newAccounts === undefined) ||\n    (oldAccounts !== undefined &&\n        oldAccounts.length === (newAccounts === null || newAccounts === void 0 ? void 0 : newAccounts.length) &&\n        oldAccounts.every((oldAccount, i) => oldAccount === newAccounts[i]));\nconst ACTIVATING = ({ activating }) => activating;\nfunction getStateHooks(useConnector) {\n    function useChainId() {\n        return useConnector(CHAIN_ID);\n    }\n    function useAccounts() {\n        return useConnector(ACCOUNTS, ACCOUNTS_EQUALITY_CHECKER);\n    }\n    function useIsActivating() {\n        return useConnector(ACTIVATING);\n    }\n    return { useChainId, useAccounts, useIsActivating };\n}\nfunction getDerivedHooks({ useChainId, useAccounts, useIsActivating }) {\n    function useAccount() {\n        var _a;\n        return (_a = useAccounts()) === null || _a === void 0 ? void 0 : _a[0];\n    }\n    function useIsActive() {\n        const chainId = useChainId();\n        const accounts = useAccounts();\n        const activating = useIsActivating();\n        return computeIsActive({\n            chainId,\n            accounts,\n            activating,\n        });\n    }\n    return { useAccount, useIsActive };\n}\n/**\n * @returns ENSNames - An array of length `accounts.length` which contains entries which are either all `undefined`,\n * indicated that names cannot be fetched because there's no provider, or they're in the process of being fetched,\n * or `string | null`, depending on whether an ENS name has been set for the account in question or not.\n */\nfunction useENS(provider, accounts = []) {\n    const [ENSNames, setENSNames] = (0, react_1.useState)();\n    (0, react_1.useEffect)(() => {\n        if (provider && accounts.length) {\n            let stale = false;\n            Promise.all(accounts.map((account) => provider.lookupAddress(account)))\n                .then((ENSNames) => {\n                if (stale)\n                    return;\n                setENSNames(ENSNames);\n            })\n                .catch((error) => {\n                if (stale)\n                    return;\n                console.debug('Could not fetch ENS names', error);\n                setENSNames(new Array(accounts.length).fill(null));\n            });\n            return () => {\n                stale = true;\n                setENSNames(undefined);\n            };\n        }\n    }, [provider, accounts]);\n    return ENSNames !== null && ENSNames !== void 0 ? ENSNames : new Array(accounts.length).fill(undefined);\n}\nfunction getAugmentedHooks(connector, { useAccounts, useChainId }, { useAccount, useIsActive }) {\n    /**\n     * Avoid type erasure by returning the most qualified type if not otherwise set.\n     * Note that this function's return type is `T | undefined`, but there is a code path\n     * that returns a Web3Provider, which could conflict with a user-provided T. So,\n     * it's important that users only provide an override for T if they know that\n     * `connector.customProvider` is going to be defined and of type T.\n     *\n     * @typeParam T - A type argument must only be provided if using `connector.customProvider`, in which case it\n     * must match the type of this property.\n     */\n    function useProvider(network, enabled = true) {\n        const isActive = useIsActive();\n        const chainId = useChainId();\n        // ensure that Provider is going to be available when loaded if @ethersproject/providers is installed\n        const [loaded, setLoaded] = (0, react_1.useState)(DynamicProvider !== undefined);\n        (0, react_1.useEffect)(() => {\n            if (loaded)\n                return;\n            let stale = false;\n            void importProvider().then(() => {\n                if (stale)\n                    return;\n                setLoaded(true);\n            });\n            return () => {\n                stale = true;\n            };\n        }, [loaded]);\n        return (0, react_1.useMemo)(() => {\n            // to ensure connectors remain fresh, we condition re-renders on loaded, isActive and chainId\n            void loaded && isActive && chainId;\n            if (enabled) {\n                if (connector.customProvider)\n                    return connector.customProvider;\n                // see tsdoc note above for return type explanation.\n                else if (DynamicProvider && connector.provider)\n                    return new DynamicProvider(connector.provider, network);\n            }\n        }, [loaded, enabled, isActive, chainId, network]);\n    }\n    function useENSNames(provider) {\n        const accounts = useAccounts();\n        return useENS(provider, accounts);\n    }\n    function useENSName(provider) {\n        var _a;\n        const account = useAccount();\n        const accounts = (0, react_1.useMemo)(() => (account === undefined ? undefined : [account]), [account]);\n        return (_a = useENS(provider, accounts)) === null || _a === void 0 ? void 0 : _a[0];\n    }\n    return { useProvider, useENSNames, useENSName };\n}\n"]},"metadata":{},"sourceType":"script"}